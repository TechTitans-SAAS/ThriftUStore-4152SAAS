<div class="container mt-4">
  <!-- Item Image and Owner Info -->
  <div class="row justify-content-center">
    <div class="col-md-8 position-relative">
      <% if @item.image.attached? %>
        <%= image_tag @item.image, class: 'img-fluid rounded' %>
      <% end %>


      <!-- Owner Details in top-right corner below the image -->
      <div class="position-absolute" style="top: 100%; right: 0;">
        <% if @item.user.avatar_url.present? %>
          <%= link_to user_path(@item.user) do %>
            <%= image_tag @item.user.avatar_url, class: 'img-fluid rounded-circle mr-2', alt: @item.user.full_name, style: "width: 50px; height: 50px;" %>
          <% end %>
        <% end %>
        <strong>Owner:</strong>
        <%= link_to @item.user.full_name, user_path(@item.user), class: 'ml-2' %>
      </div>
    </div>
  </div>

  <!-- Item Details -->
  <div class="row justify-content-center mt-4">
    <div class="col-md-8">
      <h3 class="mb-4"><%= @item.title %></h3>

      <div class="mb-3">
        <strong>Detail:</strong>
        <p><%= @item.detail %></p>
      </div>

      <div class="mb-3">
        <strong>Price:</strong>
        <p>$<%= @item.price %></p>
      </div>
      <% if current_user == @item.user && @item.buyer_email.nil? %>
        <h3>Mark as Sold</h3>
        <%= form_for @item, url: mark_as_sold_item_path(@item), method: :put do |f| %>
          <%= f.label :buyer_email, "Buyer's Email:" %>
          <%= f.text_field :buyer_email %>
          <%= f.submit "Mark as Sold", class: 'btn btn-primary' %>
        <% end %>
      <% else %>
        <p>This item is already marked as sold.</p>
      <% end %>
      <% if not @item.rating.nil? %>
        <p>Rating: <%= @item.rating %>/5</p>
      <% end %>
      <% if current_user.email == @item.buyer_email %>
        <%= form_tag update_rating_item_path(@item), method: :patch do %>
          <%= label_tag :rating %>
          <%= number_field_tag :rating, @item.rating, in: 1..5 %>

          <%= submit_tag 'Submit Rating' %>
        <% end %>
      <% end %>
      <!-- <div class="container"> -->
        <!-- Form for Submitting New Comment -->
        <div class="new-comment-form mt-4">
          <%= render 'comments/form', item: @item, comment: Comment.new %>
        </div>

        <!-- Comments Section -->
        <div class="comments-section mt-4">
          <% @item.comments.each do |comment| %>
            <%= render 'comments/comment', comment: comment, item: @item %>
          <% end %>
        </div>
        <% flash.each do |key, message| %>
          <div class="alert <%= key == 'notice' ? 'alert-success' : 'alert-danger' %>">
            <%= message %>
          </div>
        <% end %>

      <!-- Like/Unlike Button -->
      <% if current_user && current_user.likes?(@item) %>
        <%= link_to 'Unlike', remove_from_wish_list_item_path(current_user, @item), method: :delete, class: 'btn btn-danger' %>
      <% else %>
        <%= link_to 'Like', add_to_wish_list_item_path, method: :post, class: 'btn btn-primary' %>
      <% end %>
      <p>Number of likes: <%= @item.wish_list_users.count %></p>
      <!-- Back Button -->
      <%= link_to 'Back', items_path, class: 'btn btn-secondary' %>
    <!-- </div> -->
  </div>
</div>


<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<%= javascript_include_tag 'https://code.jquery.com/jquery-3.5.1.slim.min.js' %>
<%= javascript_include_tag 'https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js' %>
<%= javascript_include_tag 'https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js' %>

<script>
  document.addEventListener('turbolinks:load', function() {
    document.body.addEventListener('click', function(event) {
      // Handling the Edit button clicks
      if (event.target.classList.contains('edit-comment-button')) {
        var commentId = event.target.dataset.commentId;
        var commentBody = document.querySelector('.comment-' + commentId + ' .comment-body');
        var editForm = document.querySelector('#edit-comment-form-' + commentId);

        if (commentBody && editForm) {
          commentBody.classList.add('d-none');
          editForm.classList.remove('d-none');
        }
      }

      // Handling the Cancel button clicks in the edit form
      if (event.target.classList.contains('cancel-edit')) {
        var editForm = event.target.closest('.edit-comment-form');
        if (editForm) {
          var commentId = editForm.getAttribute('id').replace('edit-comment-form-', '');
          var commentBody = document.querySelector('.comment-' + commentId + ' .comment-body');

          if (commentBody) {
            editForm.classList.add('d-none');
            commentBody.classList.remove('d-none');
          }
        }
      }
    });
  });

</script>
